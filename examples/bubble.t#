block BubbleSort do
    0 for dup length <= do
        0 for dup length 1 - < do
            -> j
            if arr j read swap drop arr j 1 + read swap drop > do
                arr j read swap drop -> x drop
                arr j 1 + read swap drop -> y drop
                arr y j replace
                arr x j 1 + replace
                drop
            end 
            inc
        end drop
        inc
    end drop
end

block Main do
    [] 19 append 13 append 6  append 2  append 18 append 8 append 1 append dup -> arr

    len -> length

    "before:      " puts arr print

    call BubbleSort

    "sorted list: " puts print
end

call Main
